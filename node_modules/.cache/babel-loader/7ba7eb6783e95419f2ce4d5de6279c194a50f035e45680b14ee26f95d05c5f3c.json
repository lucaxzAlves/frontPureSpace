{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukga\\\\Documents\\\\javaScript\\\\css-html\\\\PureSpaceReact\\\\my-app\\\\front-end\\\\src\\\\placesContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext } from 'react';\n\n// 1. Cria o contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlacesContext = /*#__PURE__*/createContext([]);\n\n// 2. Hook customizado pra acessar o contexto\nexport const usePlacesList = () => {\n  _s();\n  return useContext(PlacesContext);\n};\n\n// 3. Provider pra envolver seu app\n_s(usePlacesList, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const PlacesProvider = ({\n  children\n}) => {\n  const fetchSensorData = async () => {\n    const response = await fetch(`http://localhost:3000/api/places`);\n    const data = await response.json();\n    return data;\n  };\n  const datas = fetchSensorData();\n  const places = [...datas];\n  return /*#__PURE__*/_jsxDEV(PlacesContext.Provider, {\n    value: places,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = PlacesProvider;\nvar _c;\n$RefreshReg$(_c, \"PlacesProvider\");","map":{"version":3,"names":["createContext","useContext","jsxDEV","_jsxDEV","PlacesContext","usePlacesList","_s","PlacesProvider","children","fetchSensorData","response","fetch","data","json","datas","places","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lukga/Documents/javaScript/css-html/PureSpaceReact/my-app/front-end/src/placesContext.js"],"sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\n// 1. Cria o contexto\r\nconst PlacesContext = createContext([]);\r\n\r\n// 2. Hook customizado pra acessar o contexto\r\nexport const usePlacesList = () => useContext(PlacesContext);\r\n\r\n// 3. Provider pra envolver seu app\r\nexport const PlacesProvider = ({ children }) => {\r\n\r\n const fetchSensorData = async () => {\r\n        const response = await fetch(`http://localhost:3000/api/places`);\r\n        const data = await response.json();\r\n        return data\r\n      };\r\n\r\n    const datas = fetchSensorData();\r\n\r\n\r\n\r\n  const places = [...datas]   \r\n  ;\r\n\r\n  return (\r\n    <PlacesContext.Provider value={places}>\r\n      {children}\r\n    </PlacesContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,gBAAGJ,aAAa,CAAC,EAAE,CAAC;;AAEvC;AACA,OAAO,MAAMK,aAAa,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,aAAa,CAAC;AAAA;;AAE5D;AAAAE,EAAA,CAFaD,aAAa;AAG1B,OAAO,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAE/C,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC;EAEH,MAAME,KAAK,GAAGL,eAAe,CAAC,CAAC;EAIjC,MAAMM,MAAM,GAAG,CAAC,GAAGD,KAAK,CAAC;EAGzB,oBACEX,OAAA,CAACC,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAEF,MAAO;IAAAP,QAAA,EACnCA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACC,EAAA,GApBWf,cAAc;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}