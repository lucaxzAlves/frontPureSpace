{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukga\\\\Documents\\\\javaScript\\\\css-html\\\\PureSpaceReact\\\\my-app\\\\front-end\\\\src\\\\components\\\\EditCard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\nimport '../styles/addPinPage.css';\nimport { usePlacesList, useUpdatePlaces } from \"../placesContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditCard({\n  sensorId,\n  positionState\n}) {\n  _s();\n  const refreshPlaces = useUpdatePlaces();\n  const nameRef = useRef();\n  const descRef = useRef();\n  const imgRef = useRef();\n  const [state, setState] = useState(false);\n  const [positionPX, setStatePX] = useState({\n    top: '0',\n    left: '0'\n  });\n  const places = usePlacesList();\n  const placeInfo = places.find(place => place.id === sensorId);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const name = nameRef.current.value;\n    const desc = descRef.current.value;\n    const img = imgRef.current.files[0];\n    const positionJSON = positionPX.left === '0' || positionPX.top === '0' ? {\n      top: placeInfo.position.top,\n      left: placeInfo.position.left\n    } : {\n      left: `${positionPX.left}vw`,\n      top: `${positionPX.top}vh`\n    };\n    const Finalimg = !img ? placeInfo.img : img;\n    const formData = new FormData();\n    formData.append('id', sensorId);\n    formData.append('name', name);\n    formData.append('desc', desc);\n    formData.append('position', JSON.stringify(positionJSON));\n    formData.append('img', Finalimg);\n    if (!name || !desc || !positionJSON) {\n      console.log(\"um dos campos está vazio\");\n      return;\n    }\n    await fetch('http://localhost:3000/update/places', {\n      method: 'PATCH',\n      body: formData\n    });\n    refreshPlaces();\n  }\n  function handlePosition() {\n    setState(true);\n    document.body.style.cursor = 'crosshair';\n  }\n  useEffect(() => {\n    if (!state) {\n      return;\n    } else {\n      setState(false);\n      setStatePX({\n        ...positionState\n      });\n      document.body.style.cursor = 'default';\n    }\n  }, [positionState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Atualizar Pin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"nome\",\n        children: \"Nome do Pin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: nameRef,\n        id: \"nome\",\n        name: \"nome\",\n        placeholder: \"Ex:Pin de Localiza\\xE7\\xE3o\",\n        defaultValue: placeInfo.name,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"descricao\",\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"descricao\",\n        ref: descRef,\n        name: \"descricao\",\n        placeholder: \"Descreva seu pin...\",\n        defaultValue: placeInfo.desc,\n        rows: \"2\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"imagem\",\n        children: \"Imagem Ilustrativa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: imgRef,\n        id: \"imagem\",\n        name: \"imagem\",\n        accept: \".svg,.png,.jpg,.jpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"preview-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pr\\xE9-visualiza\\xE7\\xE3o do seu pin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"img-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handlePosition,\n        children: \"Atualizar posi\\xE7\\xE3o do Pin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Atualizar Pin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n}\n_s(EditCard, \"/9VGR56zb/TEKKlRhqbFm8j8Cus=\", false, function () {\n  return [useUpdatePlaces, usePlacesList];\n});\n_c = EditCard;\nvar _c;\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"names":["React","useRef","useState","useEffect","usePlacesList","useUpdatePlaces","jsxDEV","_jsxDEV","EditCard","sensorId","positionState","_s","refreshPlaces","nameRef","descRef","imgRef","state","setState","positionPX","setStatePX","top","left","places","placeInfo","find","place","id","handleSubmit","e","preventDefault","name","current","value","desc","img","files","positionJSON","position","Finalimg","formData","FormData","append","JSON","stringify","console","log","fetch","method","body","handlePosition","document","style","cursor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","ref","placeholder","defaultValue","required","rows","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lukga/Documents/javaScript/css-html/PureSpaceReact/my-app/front-end/src/components/EditCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport '../styles/addPinPage.css'\r\nimport { usePlacesList, useUpdatePlaces } from \"../placesContext.js\";\r\n\r\nexport default function EditCard({ sensorId, positionState }) {\r\n\r\n  const refreshPlaces = useUpdatePlaces()\r\n\r\n  const nameRef = useRef()\r\n  const descRef = useRef()\r\n  const imgRef = useRef()\r\n  const [state,setState] = useState(false)\r\n  const [positionPX, setStatePX] = useState({\r\n    top: '0',\r\n    left: '0'\r\n  })\r\n  const places = usePlacesList()\r\n  const placeInfo = places.find((place) => place.id === sensorId);\r\n\r\n \r\n\r\n async function handleSubmit(e) {\r\n     e.preventDefault();\r\n\r\n    const name = nameRef.current.value;\r\n    const desc = descRef.current.value;\r\n    const img = imgRef.current.files[0]; \r\n      \r\n    const positionJSON = (positionPX.left === '0' || positionPX.top === '0')\r\n    ? { top: placeInfo.position.top, left: placeInfo.position.left }\r\n    : { left : `${positionPX.left}vw`,\r\n        top : `${positionPX.top}vh`}\r\n    \r\n    const Finalimg = (!img)\r\n    ? placeInfo.img\r\n    : img\r\n    \r\n   \r\n\r\n    const formData = new FormData();\r\n    formData.append('id', sensorId);\r\n    formData.append('name', name);\r\n    formData.append('desc', desc);\r\n    formData.append('position', JSON.stringify(positionJSON));\r\n    formData.append('img', Finalimg);\r\n    \r\n    if (!name || !desc || !positionJSON) {\r\n      console.log(\"um dos campos está vazio\")\r\n      return\r\n    }\r\n \r\n    \r\n \r\n    await fetch('http://localhost:3000/update/places', {\r\n        method: 'PATCH',\r\n        body: formData\r\n  })\r\n  refreshPlaces()\r\n  \r\n }\r\n\r\n    function handlePosition() {\r\n     setState(true)\r\n     \r\n      document.body.style.cursor = 'crosshair';\r\n    }\r\n\r\n     useEffect(() => {\r\n          \r\n       if(!state)  {\r\n      return  \r\n     }\r\n      else {\r\n       setState(false)\r\n       setStatePX({ ...positionState });\r\n       document.body.style.cursor = 'default'\r\n      \r\n      } \r\n     },[positionState])    \r\n     \r\n\r\n\r\n    return (\r\n      <div className=\"form-container\">\r\n    <h2>Atualizar Pin</h2>\r\n    <form onSubmit={handleSubmit}>\r\n      <label for=\"nome\">Nome do Pin</label>\r\n      <input type=\"text\" ref={nameRef} id=\"nome\" name=\"nome\" placeholder=\"Ex:Pin de Localização\" defaultValue={placeInfo.name} required />\r\n\r\n      <label for=\"descricao\">Descrição</label>\r\n      <textarea id=\"descricao\" ref={descRef} name=\"descricao\" placeholder=\"Descreva seu pin...\" defaultValue={placeInfo.desc} rows=\"2\" required></textarea>\r\n\r\n      <label for=\"imagem\">Imagem Ilustrativa</label>\r\n      <input type=\"file\" ref={imgRef} id=\"imagem\" name=\"imagem\" accept=\".svg,.png,.jpg,.jpeg\" />\r\n\r\n      <div id=\"preview-container\">\r\n        <p>Pré-visualização do seu pin</p>\r\n        <div id=\"img-preview\"></div>\r\n      </div>\r\n      <button type=\"button\" onClick={handlePosition}>Atualizar posição do Pin</button>\r\n      <button type=\"submit\">Atualizar Pin</button>\r\n    </form>\r\n  </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}